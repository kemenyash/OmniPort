@page "/join-templates"
@using OmniPort.Core.Models
@using OmniPort.UI.Presentation.ViewModels
@inject JoinTemplatesViewModel ViewModel

<h1 class="text-2xl font-bold mb-6">Transforming Templates</h1>

@if (ViewModel.Templates.Count == 0)
{
    <p>Loading templates...</p>
}
else
{
    <div class="grid grid-cols-2 gap-6">

        <!-- Source Template -->
        <div class="border rounded p-4 shadow bg-white">
            <div class="flex items-center justify-between mb-2">
                <h2 class="text-xl font-semibold text-blue-700">Source Template:</h2>
                <select class="border rounded px-2 py-1"
                        value="@ViewModel.SourceId"
                        @onchange="OnSourceChanged">
                    <option disabled value="">Select Template</option>
                    @foreach (var t in ViewModel.Templates)
                    {
                        <option value="@t.Id">@t.TemplateName</option>
                    }
                </select>
            </div>

            <p class="text-sm text-gray-500 mb-3 italic">Fields from original data</p>
            <ul class="list-disc pl-5 space-y-1">
                @foreach (var field in ViewModel.SourceTemplate?.Fields ?? [])
                {
                    <li>
                        <span class="font-medium">@field.Name</span>
                        <span class="text-gray-500 text-sm">(@field.Type)</span>
                    </li>
                }
            </ul>
        </div>

        <!-- Target Template -->
        <div class="border rounded p-4 shadow bg-white">
            <div class="flex items-center justify-between mb-2">
                <h2 class="text-xl font-semibold text-green-700">Internal CRM Schema:</h2>
                <select class="border rounded px-2 py-1"
                        value="@ViewModel.TargetId"
                        @onchange="OnTargetChanged">
                    <option disabled value="">Select Schema</option>
                    @foreach (var t in ViewModel.Templates)
                    {
                        <option value="@t.Id">@t.TemplateName</option>
                    }
                </select>
            </div>

            <p class="text-sm text-gray-500 mb-3 italic">Match source fields to target structure</p>
            <div class="space-y-4">
                @foreach (var field in ViewModel.TargetTemplate?.Fields ?? [])
                {
                    <div>
                        <label class="block font-medium text-gray-800">
                            @field.Name <span class="text-gray-500 text-sm">(@field.Type)</span>
                        </label>
                        <select class="w-full mt-1 px-3 py-2 border rounded bg-gray-50"
                                value="@ViewModel.GetMappedValue(field.Name)"
                                @onchange="e => ViewModel.MapField(field.Name, e.Value?.ToString())">
                            <option value="">-- Not Mapped --</option>
                            @foreach (var source in ViewModel.SourceTemplate?.Fields ?? [])
                            {
                                <option value="@source.Name">@source.Name (@source.Type)</option>
                            }
                        </select>
                    </div>
                }
            </div>
        </div>
    </div>

    <button @onclick="ViewModel.SaveMappingAsync"
            class="mt-6 bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700 disabled:opacity-50"
            disabled="@(!ViewModel.CanSave)">
        Save Mapping
    </button>

    <hr class="my-10" />

    <h2 class="text-xl font-semibold mb-4">Saved Join Templates</h2>

    @if (ViewModel.JoinedTemplates.Any())
    {
        <table class="min-w-full bg-white border border-gray-300 rounded shadow">
            <thead class="bg-gray-100 text-left">
                <tr>
                    <th class="px-4 py-2 border-b">Source Template</th>
                    <th class="px-4 py-2 border-b">Target Template</th>
                    <th class="px-4 py-2 border-b text-right">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var join in ViewModel.JoinedTemplates)
                {
                    <tr class="border-b hover:bg-gray-50">
                        <td class="px-4 py-2">@join.SourceTemplate</td>
                        <td class="px-4 py-2">@join.TargetTemplate</td>
                        <td class="px-4 py-2 text-right">
                            <button @onclick="() => ViewModel.DeleteJoinTemplateAsync(join.Id)"
                                    class="text-red-600 hover:underline">
                                Delete
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <p class="text-gray-500">No saved join templates found.</p>
    }
}

@code {
    protected override async Task OnInitializedAsync()
    {
        await ViewModel.InitAsync();
    }

    private async Task OnSourceChanged(ChangeEventArgs e)
    {
        if (int.TryParse(e.Value?.ToString(), out var id))
            await ViewModel.SetSourceTemplateAsync(id);
    }

    private async Task OnTargetChanged(ChangeEventArgs e)
    {
        if (int.TryParse(e.Value?.ToString(), out var id))
            await ViewModel.SetTargetTemplateAsync(id);
    }
}
